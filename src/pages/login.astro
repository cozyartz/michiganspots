---
import Layout from '../layouts/Layout.astro';
import { Mail, Github } from 'lucide-react';

const redirectUrl = Astro.url.searchParams.get('redirect') || '/';
const error = Astro.url.searchParams.get('error');

const errorMessages: Record<string, string> = {
  invalid_magic_link: 'Invalid or expired magic link. Please request a new one.',
  magic_link_already_used: 'This magic link has already been used. Please request a new one.',
  magic_link_expired: 'This magic link has expired. Please request a new one.',
  database_unavailable: 'Database temporarily unavailable. Please try again later.',
  authentication_failed: 'Authentication failed. Please try again.',
  unauthorized: 'You do not have permission to access that page.',
};
---

<Layout
  title="Login | Michigan Spots"
  description="Log in to your Michigan Spots account"
  keywords="login, sign in, Michigan Spots"
>
  <div class="min-h-screen flex items-center justify-center px-4 py-12 bg-gradient-to-br from-parchment-light via-parchment-mid to-cyan-light/20">
    <div class="max-w-md w-full">
      <!-- Logo & Title -->
      <div class="text-center mb-8">
        <h1 class="font-decorative text-4xl text-ink-primary mb-2">Welcome Back!</h1>
        <p class="text-ink-secondary">Choose your preferred way to log in</p>
      </div>

      <!-- Error Message -->
      {error && errorMessages[error] && (
        <div class="mb-6 p-4 bg-red-50 border-l-4 border-red-500 text-red-700">
          <p class="font-medium">{errorMessages[error]}</p>
        </div>
      )}

      <!-- Login Options Card -->
      <div class="bg-parchment-mid treasure-border border-2 p-8 shadow-lg">
        <!-- OAuth Providers -->
        <div class="space-y-4 mb-6">
          <!-- GitHub Login -->
          <a
            href="/api/auth/github"
            class="flex items-center justify-center space-x-3 w-full px-6 py-3 bg-gray-800 hover:bg-gray-900 text-white font-heading font-bold treasure-border transition-colors"
          >
            <Github className="w-5 h-5" />
            <span>Continue with GitHub</span>
          </a>

          <!-- Google Login -->
          <a
            href="/api/auth/google"
            class="flex items-center justify-center space-x-3 w-full px-6 py-3 bg-white hover:bg-gray-50 text-gray-800 font-heading font-bold treasure-border border-2 border-gray-300 transition-colors"
          >
            <svg class="w-5 h-5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
              <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
              <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
              <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
            </svg>
            <span>Continue with Google</span>
          </a>
        </div>

        <!-- Divider -->
        <div class="relative my-6">
          <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t border-ink-faded"></div>
          </div>
          <div class="relative flex justify-center text-sm">
            <span class="px-2 bg-parchment-mid text-ink-secondary font-heading">Or use magic link</span>
          </div>
        </div>

        <!-- Magic Link Form -->
        <form id="magic-link-form" class="space-y-4">
          <div>
            <label for="email" class="block text-sm font-heading font-bold text-ink-primary mb-2">
              Email Address
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 treasure-border border-2 border-ink-faded focus:border-cyan-primary focus:outline-none bg-parchment-light text-ink-primary"
              placeholder="you@example.com"
            />
          </div>

          <button
            type="submit"
            class="w-full px-6 py-3 bg-cyan-primary hover:bg-cyan-dark text-white font-heading font-bold treasure-border transition-colors flex items-center justify-center space-x-2"
          >
            <Mail className="w-5 h-5" />
            <span>Send Magic Link</span>
          </button>

          <!-- Status Message -->
          <div id="status-message" class="hidden"></div>
        </form>

        <!-- Help Text -->
        <p class="mt-6 text-xs text-ink-secondary text-center">
          We'll send a secure login link to your email.<br>
          The link expires in 15 minutes and can only be used once.
        </p>
      </div>

      <!-- Back to Home -->
      <div class="mt-6 text-center">
        <a href="/" class="text-cyan-primary hover:text-cyan-dark font-heading transition-colors">
          ‚Üê Back to Home
        </a>
      </div>
    </div>
  </div>

  <script>
    const form = document.getElementById('magic-link-form') as HTMLFormElement;
    const statusMessage = document.getElementById('status-message') as HTMLDivElement;

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();

      const email = (document.getElementById('email') as HTMLInputElement).value;

      // Show loading state
      statusMessage.className = 'p-4 bg-blue-50 border-l-4 border-blue-500 text-blue-700';
      statusMessage.textContent = 'Sending magic link...';
      statusMessage.classList.remove('hidden');

      try {
        const response = await fetch('/api/auth/magic-link/send', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email }),
        });

        const data = await response.json();

        if (response.ok) {
          statusMessage.className = 'p-4 bg-green-50 border-l-4 border-green-500 text-green-700';
          statusMessage.textContent = data.message || 'Check your email for the login link!';
          form.reset();
        } else {
          statusMessage.className = 'p-4 bg-red-50 border-l-4 border-red-500 text-red-700';
          statusMessage.textContent = data.error || 'Failed to send magic link. Please try again.';
        }
      } catch (error) {
        statusMessage.className = 'p-4 bg-red-50 border-l-4 border-red-500 text-red-700';
        statusMessage.textContent = 'An error occurred. Please try again later.';
      }
    });
  </script>
</Layout>
