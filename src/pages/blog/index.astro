---
import Layout from '../../layouts/Layout.astro';
import { Card } from '../../components/Card';
import { Calendar, User, ArrowRight, Tag } from 'lucide-react';

// Fetch blog posts directly from database
let posts = [];
let categories = [];
let total = 0;

try {
  const DB = (Astro.locals as any).runtime?.env?.DB;

  if (DB) {
    // Get posts
    const postsResult = await DB
      .prepare(`
        SELECT
          id, title, slug, excerpt, featured_image_url,
          category, tags, author_name, published_at,
          view_count, share_count
        FROM blog_posts
        WHERE status = 'published'
        ORDER BY published_at DESC
        LIMIT 20
      `)
      .all();

    posts = postsResult.results || [];

    // Get total count
    const countResult = await DB
      .prepare('SELECT COUNT(*) as total FROM blog_posts WHERE status = ?')
      .bind('published')
      .first();

    total = countResult?.total || 0;

    // Get categories
    const categoriesResult = await DB
      .prepare('SELECT * FROM blog_categories ORDER BY display_order')
      .all();

    categories = categoriesResult.results || [];
  }
} catch (error) {
  console.error('Error fetching blog data:', error);
}
---

<Layout
  title="Blog - Michigan Spots | Discover Michigan's Hidden Gems"
  description="Explore Michigan through our blog. Travel guides, local business spotlights, and community stories from across the Great Lakes State."
  keywords="Michigan blog, Michigan travel, local business Michigan, Michigan hidden gems"
>
  <div class="container mx-auto px-4 py-20">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="font-display text-5xl md:text-6xl font-bold text-ink-primary mb-4">
        Michigan Spots Blog
      </h1>
      <p class="text-xl text-ink-secondary max-w-3xl mx-auto">
        Discover hidden gems, explore local businesses, and dive into Michigan's vibrant communities
      </p>
    </div>

    <!-- Categories -->
    {categories.length > 0 && (
      <div class="mb-12 flex flex-wrap justify-center gap-3">
        <a
          href="/blog"
          class="px-4 py-2 rounded-full bg-copper-orange text-parchment-light font-medium hover:bg-sunset-red transition-colors"
        >
          All Posts
        </a>
        {categories.map((category: any) => (
          <a
            href={`/blog/category/${category.slug}`}
            class="px-4 py-2 rounded-full border-2 border-ink-faded/30 text-ink-primary hover:border-copper-orange hover:text-copper-orange transition-colors"
          >
            {category.icon && <span class="mr-2">{category.icon}</span>}
            {category.name}
          </a>
        ))}
      </div>
    )}

    <!-- Blog Posts Grid -->
    {posts.length === 0 ? (
      <Card className="text-center py-12">
        <p class="text-ink-secondary text-lg">No blog posts yet. Check back soon!</p>
      </Card>
    ) : (
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {posts.map((post: any) => (
          <a href={`/blog/${post.slug}`} class="group">
            <Card className="h-full hover:border-copper-orange transition-all hover:shadow-lg">
              {post.featured_image_url && (
                <img
                  src={post.featured_image_url}
                  alt={post.title}
                  class="w-full h-48 object-cover rounded-t-sm mb-4 -mt-4 -mx-4"
                />
              )}

              {post.category && (
                <span class="inline-block px-3 py-1 bg-lakes-blue/10 text-lakes-blue text-sm font-medium rounded-full mb-3">
                  {post.category}
                </span>
              )}

              <h2 class="font-heading text-2xl font-bold text-ink-primary mb-3 group-hover:text-copper-orange transition-colors">
                {post.title}
              </h2>

              <p class="text-ink-secondary mb-4 line-clamp-3">
                {post.excerpt}
              </p>

              <div class="flex items-center justify-between text-sm text-ink-faded pt-4 border-t border-ink-faded/20">
                <div class="flex items-center space-x-4">
                  <span class="flex items-center">
                    <User class="w-4 h-4 mr-1" />
                    {post.author_name}
                  </span>
                  <span class="flex items-center">
                    <Calendar class="w-4 h-4 mr-1" />
                    {new Date(post.published_at).toLocaleDateString('en-US', {
                      month: 'short',
                      day: 'numeric',
                      year: 'numeric'
                    })}
                  </span>
                </div>
                <ArrowRight class="w-5 h-5 text-copper-orange group-hover:translate-x-1 transition-transform" />
              </div>
            </Card>
          </a>
        ))}
      </div>
    )}

    <!-- Pagination (if needed) -->
    {total > 20 && (
      <div class="mt-12 flex justify-center">
        <Card className="inline-flex items-center space-x-4">
          <button class="px-4 py-2 text-ink-secondary hover:text-copper-orange transition-colors">
            Previous
          </button>
          <span class="text-ink-secondary">Page 1 of {Math.ceil(total / 20)}</span>
          <button class="px-4 py-2 text-ink-secondary hover:text-copper-orange transition-colors">
            Next
          </button>
        </Card>
      </div>
    )}
  </div>
</Layout>
